{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/imgs/img.jpg","components/About.js","components/TextForm.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","titleMode","onClick","changeTitle","autoComplete","changeMode","role","htmlFor","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","useState","setMode","color","backgroundColor","darkStyle","setdarkStyle","style","src","img","width","height","alt","TextForm","text","setText","heading","value","onChange","event","target","rows","newText","showAlert","txtarr","split","i","length","join","navigator","clipboard","writeText","App","settitleMode","setAlert","message","setTimeout","document","setInterval","body","index","element","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41986559.chunk.js","sourcesContent":["// Understanding Props\r\nimport React from 'react'\r\nimport './Navbar.css'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"about\">{ props.about }</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <button type=\"button\" className={`btn me-3 btn-${props.titleMode===''?'secondary':'primary'}`} onClick={props.changeTitle} autoComplete=\"off\">Blink Title</button>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.changeMode} type=\"checkbox\" role=\"switch\" id=\"changeMode\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"changeMode\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,     // Hear title is must required to passed(In case of default not set)\r\n    about: PropTypes.string\r\n}\r\n// It is just used to define type of props to do not make misteks in prop sending.\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title',\r\n    about: 'About us goes hear'\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize  = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","export default __webpack_public_path__ + \"static/media/img.b03507c1.jpg\";","import React, {useState} from 'react'\r\nimport img from './imgs/img.jpg'\r\n\r\nexport default function About() {\r\n\r\n    const [mode, setMode] = useState('Dark Mode');\r\n    const [darkStyle, setdarkStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const handleDarkWhiteClick = () => {\r\n        if(mode === 'Light Mode'){\r\n            setdarkStyle({color: 'black', backgroundColor: 'white'});\r\n            setMode('Dark Mode');\r\n        }else {\r\n            setdarkStyle({color: 'white', backgroundColor: 'black'});\r\n            setMode('Light Mode');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\" style={darkStyle}>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 my-2\">\r\n                            <div className=\"card h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <img src={img} style={{width: '100%', height: '100%'}} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 my-2\">\r\n                            <h2>Bhavanshu Dalwadi</h2>\r\n                            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nobis non nostrum hic quod nemo veritatis quaerat labore neque placeat qui quasi incidunt suscipit minima, ab ea et ullam consequatur vel porro alias doloremque eveniet! Aspernatur dolor quae optio iste itaque ab explicabo quos, libero delectus id repudiandae dolore tenetur accusantium vitae amet minima consectetur expedita ex, nulla qui. Labore, magnam? Cum modi inventore dignissimos in architecto maxime ab laudantium, a ipsam obcaecati tempora rem blanditiis? Nemo architecto quisquam, similique in ipsa saepe commodi animi, sunt nobis neque cum consectetur fugit non nesciunt sit iure quasi, tempore debitis? Quis, harum accusantium?</p>\r\n                            <button className=\"btn btn-primary mt-3\" onClick={handleDarkWhiteClick}>{mode}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// Handle onChange and onClick Events Using State(useState Hook)\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () => {\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Uppercase.\",\"success\");\r\n        // console.log(text.split(\" \"));        // It returns array of string words\r\n        // console.log(text.split(\" \").length); // It returns length of array/No of elements in array\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lowercase.\",\"success\");\r\n    }\r\n    const handleCapClick = () => {\r\n        let txtLower = text.toLowerCase();\r\n        const txtarr = txtLower.split(\" \");\r\n        for (let i=0; i<txtarr.length; i++) {\r\n            txtarr[i] = txtarr[i].charAt(0).toUpperCase() + txtarr[i].slice(1);\r\n        }\r\n        let newText = txtarr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Capitolized.\",\"success\");\r\n    }\r\n    const handleCpyClick = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Coppied!\",\"success\");\r\n    }\r\n    const handleExSpClick = () => {\r\n        let newText = text.split(/[\" \"]+/);     //Used to Remove Extra Spaces\r\n        newText = newText.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Extra space has been removed.\",\"success\");\r\n    }\r\n    const handleClrClick = () => {\r\n        setText('');\r\n        props.showAlert(\"Text has been cleared.\",\"success\");\r\n    }\r\n    const handleMyTxtOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-2\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleMyTxtOnChange} style={{backgroundColor: props.mode === 'dark'?'#ccc':'white'}} id=\"myText\" rows=\"5\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert To UPPERCASE</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert To lowercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCapClick}>Convert To Capitalized</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCpyClick}>Copy To Clipboard</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExSpClick}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClrClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h3>Text Summary</h3>\r\n                <p>{text.split(\" \").length} Words &amp; {text.length} Charecters.</p>\r\n                <p>Average {text.split(\" \").length * 0.008} Minutes required to read this.</p>\r\n                <h3>Preview</h3>\r\n                <p>{text?text:'NO TEXT'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// Pass function as props\n\nimport { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [titleMode, settitleMode] = useState('');\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#041743';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled.\",\"success\");\n    }else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled.\",\"success\");\n    }\n  }\n\n  const toggleTitle = () => {\n    if(titleMode === 'Blinking') {\n      settitleMode('');\n      document.title = 'Simple React App | Developed By Bhavanshu Dalwadi';\n    }else {\n      settitleMode('Blinking');\n      setInterval(() => {\n        document.title = 'Simple React App';\n      },2000)\n      setInterval(() => {\n        document.title = 'Developed by Bhavanshu Dalwadi';\n      },1500)\n    }\n  }\n\n  return (\n    <>\n    <BrowserRouter>\n      \n        <Navbar title=\"Simple React App\" about=\"About Us\" mode={mode} titleMode={titleMode} changeTitle={toggleTitle} changeMode={toggleMode}/>   {/* Passing function in props */}\n        {/* <Navbar /> */}\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          <Routes>\n            <Route index element={<TextForm showAlert={showAlert} heading=\"Enter text to check\" mode={mode} />} />\n            <Route path='about' element={<About />} />\n          </Routes>\n          {/* <TextForm showAlert={showAlert} heading=\"Enter text to check\" mode={mode} />    Passing function in props */}\n          {/* <About /> */}\n        </div>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}