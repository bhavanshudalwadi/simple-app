{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/imgs/img.jpg","components/TextForm.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","titleMode","onClick","changeTitle","autoComplete","changeMode","role","htmlFor","defaultProps","about","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","useState","text","setText","heading","value","onChange","event","target","style","backgroundColor","rows","newText","showAlert","txtarr","split","i","length","join","navigator","clipboard","writeText","App","settitleMode","setMode","setAlert","message","setTimeout","document","setInterval","body","color","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.177813c6.chunk.js","sourcesContent":["// Understanding Props\r\nimport React from 'react'\r\nimport './Navbar.css'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"about\">{ props.about }</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <button type=\"button\" className={`btn me-3 btn-${props.titleMode===''?'secondary':'primary'}`} onClick={props.changeTitle} autoComplete=\"off\">Blink Title</button>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.changeMode} type=\"checkbox\" role=\"switch\" id=\"changeMode\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"changeMode\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,     // Hear title is must required to passed(In case of default not set)\r\n    about: PropTypes.string\r\n}\r\n// It is just used to define type of props to do not make misteks in prop sending.\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title',\r\n    about: 'About us goes hear'\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize  = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","export default __webpack_public_path__ + \"static/media/img.b03507c1.jpg\";","// Handle onChange and onClick Events Using State(useState Hook)\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () => {\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Uppercase.\",\"success\");\r\n        // console.log(text.split(\" \"));        // It returns array of string words\r\n        // console.log(text.split(\" \").length); // It returns length of array/No of elements in array\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lowercase.\",\"success\");\r\n    }\r\n    const handleCapClick = () => {\r\n        let txtLower = text.toLowerCase();\r\n        const txtarr = txtLower.split(\" \");\r\n        for (let i=0; i<txtarr.length; i++) {\r\n            txtarr[i] = txtarr[i].charAt(0).toUpperCase() + txtarr[i].slice(1);\r\n        }\r\n        let newText = txtarr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Capitolized.\",\"success\");\r\n    }\r\n    const handleCpyClick = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Coppied!\",\"success\");\r\n    }\r\n    const handleExSpClick = () => {\r\n        let newText = text.split(/[\" \"]+/);     //Used to Remove Extra Spaces\r\n        newText = newText.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Extra space has been removed.\",\"success\");\r\n    }\r\n    const handleClrClick = () => {\r\n        setText('');\r\n        props.showAlert(\"Text has been cleared.\",\"success\");\r\n    }\r\n    const handleMyTxtOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-2\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleMyTxtOnChange} style={{backgroundColor: props.mode === 'dark'?'#ccc':'white'}} id=\"myText\" rows=\"5\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert To UPPERCASE</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert To lowercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCapClick}>Convert To Capitalized</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCpyClick}>Copy To Clipboard</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExSpClick}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClrClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h3>Text Summary</h3>\r\n                <p>{text.split(\" \").length} Words &amp; {text.length} Charecters.</p>\r\n                <p>Average {text.split(\" \").length * 0.008} Minutes required to read this.</p>\r\n                <h3>Preview</h3>\r\n                <p>{text?text:'NO TEXT'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// Pass function as props\n\nimport { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [titleMode, settitleMode] = useState('');\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#041743';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled.\",\"success\");\n    }else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled.\",\"success\");\n    }\n  }\n\n  const toggleTitle = () => {\n    if(titleMode === 'Blinking') {\n      settitleMode('');\n      document.title = 'Simple React App | Developed By Bhavanshu Dalwadi';\n    }else {\n      settitleMode('Blinking');\n      setInterval(() => {\n        document.title = 'Simple React App';\n      },2000)\n      setInterval(() => {\n        document.title = 'Developed by Bhavanshu Dalwadi';\n      },1500)\n    }\n  }\n\n  return (\n    <>\n    {/* <BrowserRouter> */}\n        <Navbar title=\"Simple React App\" about=\"About Us\" mode={mode} titleMode={titleMode} changeTitle={toggleTitle} changeMode={toggleMode}/>   {/* Passing function in props */}\n        {/* <Navbar /> */}\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route index element={<TextForm showAlert={showAlert} heading=\"Enter text to check\" mode={mode} />} />\n            <Route path='about' element={<About />} />\n          </Routes> */}\n\n          <TextForm showAlert={showAlert} heading=\"Enter text to check\" mode={mode} />    Passing function in props\n          {/* <About /> */}\n        </div>\n    {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}